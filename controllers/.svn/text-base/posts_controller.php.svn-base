<?php
/* SVN FILE:  $Id$ */
/**
 * Short description for file.
 *
 * Long description for file
 *
 * PHP versions 5
 *
 * Licensed under The BSD License
 * Redistributions of files must retain the above copyright notice.
 *
 * @filesource
 * @copyright     Copyright 2007-2009, Felix Ding (http://dingyu.me)
 * @link          http://lonelythinker.org Project LonelyThinker
 * @package       LonelyThinker
 * @author		  $LastChangedBy$
 * @version       $Revision$
 * @modifiedby    $LastChangedBy$
 * @lastmodified  $Date$
 * @license       http://www.opensource.org/licenses/bsd-license.php The BSD License
 */
class PostsController extends AppController
{
	var $name = 'Posts';
	var $scaffold;
	var $components = array('Cookie', 'Session');
	var $helpers = array('Gravatar', 'Rss', 'Session', 'Geshi');
	var $othAuthRestrictions = array('add','edit','delete');
	var $paginate = array('limit' => 5, 'page' => 1, 'order'=>array('Post.created' => 'desc'));

	
	/**
	 * blog homepage
	 */
	 
	public function index()
	{	
		//get latest posts
		$posts = $this->readCache('posts');
		$this->params['paging'] = $this->readCache('paging');
		
		if(!$posts || !$this->params['paging'])
		{
			$posts = $this->paginate('Post', array('Post.status'=>'published'));
			
			//caching
			$this->writeCache('posts', $posts);
			$this->writeCache('paging', $this->params['paging']);
		}
			
		$this->set('posts', $posts);
	}
	
	/**
	 * rss feed
	 */
	 
	public function feed()
	{
		//$channel = array ('title' => Configure::read('LT.siteName'), 'link' => Configure::read('LT.siteUrl'), 'description' => Configure::read('LT.siteSlogan'));
		//$this->set('channel', $channel);
		$posts = $this->Post->findAll(array('Post.status'=>'published'), '*', 'ORDER BY Post.created DESC');
		
		$this->set('posts', $posts);
		$this->render('rss/feed');
	}
	
	
	/**
	 * render the view page
	 */
	
	public function view($slug = null)
	{
		//set post		
		if(($post = $this->readCache('post')) === false)
		{
			if(!$post = $this->Post->findBySlug($slug))
			{
				$this->cakeError('error404');
				return false;
			}
			
			$this->writeCache('post', $post);
		}
		
		$this->set('post' ,$post);
		
		//get comments data
		//if(($comments = $this->readCache('comments')) === false)
		//{
			$comments = $this->requestAction('/comments/getCommentsByPostId/' . $post['Post']['id']);
		//	$this->writeCache('comments', $comments);
		//}
		
		$this->set('comments', $comments);
		
		//set a time point 
		$this->setTimePoint($post['Post']['id']);
	}
	
	/**
	 * get cookies about pass them to the view for CommentAddForm
	 */
	
	public function getCookies()
	{	
		return array($this->Cookie->read('commentName'), $this->Cookie->read('commentEmail'), $this->Cookie->read('commentWebsite'));
	}	
}

?>